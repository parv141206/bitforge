export const ImpliedModeInstructions = [
  {
    opcode: "07",
    mnemonic: "RLC",
    description:
      "Rotate accumulator left without carry - Each bit shifts left, MSB goes to LSB and CY flag.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "0F",
    mnemonic: "RRC",
    description:
      "Rotate accumulator right without carry - Each bit shifts right, LSB goes to MSB and CY flag.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "17",
    mnemonic: "RAL",
    description:
      "Rotate accumulator left through carry - Each bit shifts left, MSB goes to CY flag, CY flag goes to LSB.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "1F",
    mnemonic: "RAR",
    description:
      "Rotate accumulator right through carry - Each bit shifts right, LSB goes to CY flag, CY flag goes to MSB.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "2F",
    mnemonic: "CMA",
    description: "Complement accumulator - Invert all bits in accumulator.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "37",
    mnemonic: "STC",
    description: "Set carry flag - Set carry flag to 1.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "3F",
    mnemonic: "CMC",
    description: "Complement carry flag - Invert carry flag.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "27",
    mnemonic: "DAA",
    description:
      "Decimal adjust accumulator - Adjust accumulator content to form two 4-bit BCD digits.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "76",
    mnemonic: "HLT",
    description: "Halt - Stop program execution.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "00",
    mnemonic: "NOP",
    description: "No operation - Do nothing for one instruction cycle.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "F9",
    mnemonic: "SPHL",
    description: "Copy HL register pair content to Stack Pointer.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "E3",
    mnemonic: "XTHL",
    description: "Exchange top of stack with HL register pair.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "EB",
    mnemonic: "XCHG",
    description: "Exchange content of DE register pair with HL register pair.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "C5",
    mnemonic: "PUSH B",
    description: "Push BC register pair onto stack.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "D5",
    mnemonic: "PUSH D",
    description: "Push DE register pair onto stack.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "E5",
    mnemonic: "PUSH H",
    description: "Push HL register pair onto stack.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "F5",
    mnemonic: "PUSH PSW",
    description: "Push Processor Status Word (A and Flags) onto stack.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "C1",
    mnemonic: "POP B",
    description: "Pop top of stack into BC register pair.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "D1",
    mnemonic: "POP D",
    description: "Pop top of stack into DE register pair.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "E1",
    mnemonic: "POP H",
    description: "Pop top of stack into HL register pair.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "F1",
    mnemonic: "POP PSW",
    description: "Pop top of stack into Processor Status Word (A and Flags).",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "C9",
    mnemonic: "RET",
    description: "Return from subroutine unconditionally.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "C0",
    mnemonic: "RNZ",
    description: "Return from subroutine if Zero flag is 0.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "C8",
    mnemonic: "RZ",
    description: "Return from subroutine if Zero flag is 1.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "D0",
    mnemonic: "RNC",
    description: "Return from subroutine if Carry flag is 0.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "D8",
    mnemonic: "RC",
    description: "Return from subroutine if Carry flag is 1.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "E0",
    mnemonic: "RPO",
    description: "Return from subroutine if Parity flag is 0 (Parity Odd).",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "E8",
    mnemonic: "RPE",
    description: "Return from subroutine if Parity flag is 1 (Parity Even).",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "F0",
    mnemonic: "RP",
    description: "Return from subroutine if Sign flag is 0 (Plus).",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "F8",
    mnemonic: "RM",
    description: "Return from subroutine if Sign flag is 1 (Minus).",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "C7",
    mnemonic: "RST 0",
    description: "Restart - Call to location 0000H.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "CF",
    mnemonic: "RST 1",
    description: "Restart - Call to location 0008H.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "D7",
    mnemonic: "RST 2",
    description: "Restart - Call to location 0010H.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "DF",
    mnemonic: "RST 3",
    description: "Restart - Call to location 0018H.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "E7",
    mnemonic: "RST 4",
    description: "Restart - Call to location 0020H.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "EF",
    mnemonic: "RST 5",
    description: "Restart - Call to location 0028H.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "F7",
    mnemonic: "RST 6",
    description: "Restart - Call to location 0030H.",
    bytes: 1,
    operands: [],
  },
  {
    opcode: "FF",
    mnemonic: "RST 7",
    description: "Restart - Call to location 0038H.",
    bytes: 1,
    operands: [],
  },
];
